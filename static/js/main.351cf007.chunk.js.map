{"version":3,"sources":["logo.svg","Models/Todo.js","Data/schedule.js","Models/Schedule.js","Components/TodoComponent.jsx","Components/TodoScheduleItemComponent.jsx","Components/ScheduleComponent.jsx","Data/store.js","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","__webpack_require__","p","Todo","_ref","title","estimate","start","done","Object","classCallCheck","this","Date","now","moment","add","toDate","end","duration","diff","asMinutes","storedTodos","JSON","parse","localStorage","getItem","console","log","todos","map","todo","Schedule","_getPrototypeOf2","_this","_len","arguments","length","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","update","result","esm_get","prototype","filter","sort","a","b","notDone","lastIndex","tomorrow","startOf","i","current","TodoComponent","props","inputValueChange","target","state","name","value","setState","react_default","createElement","type","placeholder","onChange","bind","style","width","autoFocus","textAlign","htmlFor","checked","Component","defaultProps","TodoScheduleItemComponent","localizer","BigCalendar","momentLocalizer","Calendar","withDragAndDrop","modalStyles","content","top","left","right","bottom","marginRight","transform","zIndex","ScheduleComponent","calendarOnEventResize","event","callOnScheduleChanged","calendarOnEventDrop","_ref2","onScheduleChanged","calendarOnSelectSlot","_ref3","_this$state","currentTodo","schedule","push","calendarOnSelectEvent","todoOnCloseClick","_this$state2","splice","indexOf","_this$state3","increment","lib_default","isOpen","contentLabel","Components_TodoComponent","onClick","defaultDate","defaultView","events","titleAccessor","TodoScheduleItemComponent_TodoScheduleItemComponent","onEventDrop","onEventResize","onSelectEvent","onSelectSlot","step","selectable","resizable","height","Redux","action","Modal","setAppElement","scheduleData","construct","toConsumableArray","App","handleScheduleChange","setItem","stringify","className","src","logo","alt","display","es","store","Components_ScheduleComponent","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,mVCEnBC,aACnB,SAAAA,EAAAC,GAEG,IADDC,EACCD,EADDC,MAAOC,EACNF,EADME,SAAUC,EAChBH,EADgBG,MAAOC,EACvBJ,EADuBI,KACvBC,OAAAC,EAAA,EAAAD,CAAAE,KAAAR,GACDQ,KAAKN,MAAQA,GAAS,GACtBM,KAAKL,SAAWA,GAAY,GAC5BK,KAAKJ,MAAQA,GAASK,KAAKC,MAC3BF,KAAKH,KAAOA,IAAQ,kDAIpB,OAAOM,IAAOH,KAAKJ,OAAOQ,IAAIJ,KAAKL,SAAU,WAAWU,uBAGlDC,GACNN,KAAKL,SAAWQ,IAAOI,SAASJ,IAAOH,KAAKM,KAAKE,KAAKR,KAAKJ,QAAQa,qBCGjEC,EAAcC,KAAKC,MAAMC,aAAaC,QAAQ,UAEpDC,QAAQC,IAAI,cAAeN,GAE3B,IAEeO,GAFAP,GAtBM,CACnB,CACEhB,MAAO,8BACPE,MAAO,GACPD,SAAU,IAEZ,CACED,MAAO,kCACPE,MAAO,GACPD,SAAU,KAEZ,CACED,MAAO,2DACPE,MAAO,GACPD,SAAU,OAQ8BuB,IAAI,SAAAC,GAAI,OAAI,IAAI3B,EAAK2B,uBCtB5CC,cACnB,SAAAA,IAAsB,IAAAC,EAAAC,EAAAxB,OAAAC,EAAA,EAAAD,CAAAE,KAAAoB,GAAA,QAAAG,EAAAC,UAAAC,OAAPR,EAAO,IAAAS,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAPV,EAAOU,GAAAH,UAAAG,GAAA,OACpBL,EAAAxB,OAAA8B,EAAA,EAAA9B,CAAAE,MAAAqB,EAAAvB,OAAA+B,EAAA,EAAA/B,CAAAsB,IAAAU,KAAAC,MAAAV,EAAA,CAAArB,MAAAgC,OAASf,MACJgB,SAFeX,oEAKjBL,GACH,IAAMiB,EAAMpC,OAAAqC,EAAA,EAAArC,QAAA+B,EAAA,EAAA/B,CAAAsB,EAAAgB,WAAA,OAAApC,MAAA8B,KAAA9B,KAAciB,GAE1B,OADAjB,KAAKiC,SACEC,oCAIP,MAAO,GAAGF,OAAOhC,MAAMqC,OAAO,SAAAlB,GAAI,OAAKA,EAAKtB,wCAI5CkB,QAAQC,IAAI,oBAAqBhB,MACjCA,KAAKsC,KAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE3C,MAAQ4C,EAAE5C,QAChC,IAAM6C,EAAUzC,KAAKyC,UACfC,EAAYD,EAAQhB,OAAS,EACnC,IAAmB,IAAfiB,EAAkB,OAAO1C,KAE7Be,QAAQC,IAAI,gCAAiCyB,GAE7C,IAAME,EAAWxC,MAASC,IAAI,EAAG,OAAOwC,QAAQ,OAAOvC,SAEvDU,QAAQC,IAAI,6BAA8ByB,EAAQ,IAClDA,EAAQ,GAAG7C,MAAQ,IAAIK,KACvBc,QAAQC,IAAI,4BAA6ByB,EAAQ,IAEjD,IAAK,IAAII,EAAI,EAAGA,GAAKH,EAAWG,IAAK,CACnC,IAAMC,EAAUL,EAAQI,GACpBC,EAAQxC,IAAMqC,GAAYG,EAAQlD,MAAQ+C,IAC5CG,EAAQlD,MAAQ+C,GAEdE,EAAIH,IACND,EAAQI,EAAI,GAAGjD,MAAQkD,EAAQxC,KAKnC,OADAS,QAAQC,IAAI,mBAAoBhB,MACzBA,wBA1C2B0B,2CCEhCqB,cASJ,SAAAA,EAAYC,GAAO,IAAA1B,EAAA,OAAAxB,OAAAC,EAAA,EAAAD,CAAAE,KAAA+C,IACjBzB,EAAAxB,OAAA8B,EAAA,EAAA9B,CAAAE,KAAAF,OAAA+B,EAAA,EAAA/B,CAAAiD,GAAAjB,KAAA9B,KAAMgD,KAIRC,iBAAmB,SAAAxD,GAAgB,IAAbyD,EAAazD,EAAbyD,OACZ/B,EAASG,EAAK6B,MAAdhC,KACRA,EAAK+B,EAAOE,MAAQF,EAAOG,MAC3B/B,EAAKgC,SAAS,CAAEnC,UANhBG,EAAK6B,MAAQ,CAAEhC,KAAM6B,EAAM7B,MAFVG,wEAWV,IACCH,EAASnB,KAAKmD,MAAdhC,KACR,OAAKA,EAIHoC,EAAAhB,EAAAiB,cAAA,WACED,EAAAhB,EAAAiB,cAAA,qCACAD,EAAAhB,EAAAiB,cAAA,sBAEED,EAAAhB,EAAAiB,cAAA,SACEJ,KAAK,QACLK,KAAK,OACLJ,MAAOlC,EAAKzB,MACZgE,YAAY,+BACZC,SAAU3D,KAAKiD,iBAAiBW,KAAK5D,MACrC6D,MAAO,CAAEC,MAAO,OAEhBC,WAAS,KAGbR,EAAAhB,EAAAiB,cAAA,+BAEED,EAAAhB,EAAAiB,cAAA,SACEJ,KAAK,WACLK,KAAK,OACLJ,MAAOlC,EAAKxB,SACZgE,SAAU3D,KAAKiD,iBACfY,MAAO,CAAEC,MAAO,GAAIE,UAAW,YAPnC,yBAWAT,EAAAhB,EAAAiB,cAAA,SACED,EAAAhB,EAAAiB,cAAA,SAAOS,QAAQ,QACbV,EAAAhB,EAAAiB,cAAA,SACEJ,KAAK,OACLK,KAAK,WACLS,QAAS/C,EAAKtB,KACd8D,SAAU3D,KAAKiD,mBALnB,eA9BG,YAvBekB,aAAtBpB,EACGqB,aAAe,CACpBjD,KAAM,MAkEK4B,QCpEMsB,cASnB,SAAAA,EAAYrB,GAAO,IAAA1B,EAAA,OAAAxB,OAAAC,EAAA,EAAAD,CAAAE,KAAAqE,IACjB/C,EAAAxB,OAAA8B,EAAA,EAAA9B,CAAAE,KAAAF,OAAA+B,EAAA,EAAA/B,CAAAuE,GAAAvC,KAAA9B,KAAMgD,KAIRC,iBAAmB,SAAAxD,GAAgB,IAAbyD,EAAazD,EAAbyD,OACZ/B,EAASG,EAAK6B,MAAdhC,KACRA,EAAK+B,EAAOE,MAAQF,EAAOG,MAC3B/B,EAAKgC,SAAS,CAAEnC,UANhBG,EAAK6B,MAAQ,CAAEhC,KAAM6B,EAAM7B,MAFVG,wEAWV,IACCH,EAASnB,KAAKgD,MAAd7B,KACR,OACEoC,EAAAhB,EAAAiB,cAAA,YACED,EAAAhB,EAAAiB,cAAA,SAAOS,QAAQ,QACbV,EAAAhB,EAAAiB,cAAA,SACEJ,KAAK,OACLK,KAAK,WACLS,QAAS/C,EAAKtB,KACd8D,SAAU3D,KAAKiD,mBAEhB9B,EAAKzB,eA/BuCyE,aAAlCE,EACZD,aAAe,CACpBjD,KAAM,MCOV,IAAMmD,EAAYC,IAAYC,gBAAgBrE,KACxCsE,EAAWC,IAAgBH,KAE3BI,EAAc,CAClBC,QAAS,CACPC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,wBACXC,OAAQ,oBAKNC,cAYJ,SAAAA,EAAYpC,GAAO,IAAA1B,EAAA,OAAAxB,OAAAC,EAAA,EAAAD,CAAAE,KAAAoF,IACjB9D,EAAAxB,OAAA8B,EAAA,EAAA9B,CAAAE,KAAAF,OAAA+B,EAAA,EAAA/B,CAAAsF,GAAAtD,KAAA9B,KAAMgD,KAIRqC,sBAAwB,SAAA5F,GAA2B,IAAxB6F,EAAwB7F,EAAxB6F,MAAO1F,EAAiBH,EAAjBG,MAAOU,EAAUb,EAAVa,IACvCS,QAAQC,IAAI,kCAAmCsE,EAAO,CAAE1F,QAAOU,QAC/DgF,EAAM3F,SAAWQ,IAAOI,SAASJ,IAAOG,GAAKE,KAAKL,IAAOP,KAASa,YAClE6E,EAAM1F,MAAQA,EACd0B,EAAKiE,yBATYjE,EAYnBkE,oBAAsB,SAAAC,GAAsB,IAAnBH,EAAmBG,EAAnBH,MAAO1F,EAAY6F,EAAZ7F,MAC9BmB,QAAQC,IAAI,gCAAiCsE,EAAO,CAAE1F,UACtD0F,EAAM1F,MAAQA,EACdmB,QAAQC,IAAI,mCAAoCsE,GAChDhE,EAAKiE,yBAhBYjE,EAmBnBiE,sBAAwB,WACtBxE,QAAQC,IAAI,kCAEZ0E,EAD8BpE,EAAK0B,MAA3B0C,sBArBSpE,EAyBnBqE,qBAAuB,SAAAC,GAAoB,IAAjBhG,EAAiBgG,EAAjBhG,MAAOU,EAAUsF,EAAVtF,IAAUuF,EACPvE,EAAK6B,MAA/B2C,EADiCD,EACjCC,YAAaC,EADoBF,EACpBE,SACrB,IAAID,EAAJ,CACA,IAAM3E,EAAO,IAAI3B,EAAK,CACpBI,QACAD,SAAUQ,IAAOI,SAASJ,IAAOG,GAAKE,KAAKL,IAAOP,KAASa,cAE7DsF,EAASC,KAAK7E,GACdG,EAAKgC,SAAS,CAAEwC,YAAa3E,EAAM4E,eAjClBzE,EAoCnB2E,sBAAwB,SAACX,GACvBhE,EAAKgC,SAAS,CAAEwC,YAAaR,KArCZhE,EAwCnB4E,iBAAmB,WAAM,IAAAC,EACW7E,EAAK6B,MAA/B2C,EADeK,EACfL,YAAaC,EADEI,EACFJ,SAChBD,EAAYpG,OACfqG,EAASK,OAAOL,EAASM,QAAQP,GAAc,GAEjDxE,EAAKiE,wBACLjE,EAAKgC,SAAS,CAAEwC,YAAa,QA5C7BxE,EAAK6B,MAAQ,CAAE2C,YAAa,KAAMC,SAAU/C,EAAM+C,UAFjCzE,wEAiDV,IAAAgF,EAC2BtG,KAAKmD,MAA/B2C,EADDQ,EACCR,YAAaC,EADdO,EACcP,SACbQ,EAAcvG,KAAKgD,MAAnBuD,UAGR,OAFAxF,QAAQC,IAAI,sBAAuB+E,GAGjCxC,EAAAhB,EAAAiB,cAAA,WACED,EAAAhB,EAAAiB,cAACgD,EAAAjE,EAAD,CACEkE,SAAUX,EACVY,aAAa,gBACb7C,MAAOc,GAEPpB,EAAAhB,EAAAiB,cAACmD,EAAD,CAAexF,KAAM2E,IACrBvC,EAAAhB,EAAAiB,cAAA,UAAQC,KAAK,SAASmD,QAAS5G,KAAKkG,kBAApC,UAEF3C,EAAAhB,EAAAiB,cAACiB,EAAD,CACEoC,YAAa,IAAI5G,KACjB6G,YAAY,MACZC,OAAQhB,EAAS1D,OAAO,SAAAlB,GAAI,OAAKA,EAAKtB,OACtCmH,cAAe,SAAA1B,GAAK,OAAK/B,EAAAhB,EAAAiB,cAACyD,EAAD,CAA2B9F,KAAMmE,KAC1D4B,YAAalH,KAAKwF,oBAClB2B,cAAenH,KAAKqF,sBACpB+B,cAAepH,KAAKiG,sBACpBoB,aAAcrH,KAAK2F,qBACnBrB,UAAWA,EACXgD,KAAMf,EACNgB,YAAU,EACVC,WAAS,EACT3D,MAAO,CAAE4D,OAAQ,mBAzFKtD,aAA1BiB,EAOGhB,aAAe,CACpBmC,UAAW,GACXb,kBAAmB,cAsFRN,QCrHAsC,cAJf,SAAiBvE,EAAOwE,GACtB,OAAOxE,ICUTyE,IAAMC,cAAc,SAEpB,IAAMC,EAAYhI,OAAAiI,EAAA,EAAAjI,CAAOsB,EAAPtB,OAAAkI,EAAA,EAAAlI,CAAmBmB,IAiCtBgH,6MA9Bb9E,MAAQ,CACN4C,SAAU+B,KAIZI,qBAAuB,WAAM,IACnBnC,EAAazE,EAAK6B,MAAlB4C,SACRlF,aAAasH,QAAQ,QAASxH,KAAKyH,UAAUrC,EAAS9D,WACtDX,EAAKgC,SAAS,CAAEyC,sFAGT,IACCA,EAAa/F,KAAKmD,MAAlB4C,SACR,OACExC,EAAAhB,EAAAiB,cAAA,OAAK6E,UAAU,OACb9E,EAAAhB,EAAAiB,cAAA,UAAQ6E,UAAU,cAChB9E,EAAAhB,EAAAiB,cAAA,OAAK8E,IAAKC,IAAMF,UAAU,WAAWG,IAAI,OAAO3E,MAAO,CAAE4E,QAAS,UAClElF,EAAAhB,EAAAiB,cAAA,MAAI6E,UAAU,aAAd,gBAEF9E,EAAAhB,EAAAiB,cAACkF,EAAA,EAAD,CAAqBC,MAAOA,GAC1BpF,EAAAhB,EAAAiB,cAACoF,EAAD,CACE7C,SAAUA,EACVL,kBAAmB1F,KAAKkI,gCAvBlB/D,aCNE0E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO5F,EAAAhB,EAAAiB,cAAC4F,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.351cf007.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import moment from 'moment';\n\nexport default class Todo {\n  constructor({\n    title, estimate, start, done,\n  }) {\n    this.title = title || '';\n    this.estimate = estimate || 60;\n    this.start = start || Date.now();\n    this.done = done || false;\n  }\n\n  get end() {\n    return moment(this.start).add(this.estimate, 'minutes').toDate();\n  }\n\n  set end(end) {\n    this.estimate = moment.duration(moment(this.end).diff(this.start)).asMinutes();\n  }\n}\n","import Todo from '../Models/Todo';\n\nconst defaultTodos = [\n  {\n    title: 'Host on GitHub static sites',\n    start: 20,\n    estimate: 90,\n  },\n  {\n    title: 'Ability to view completed todos',\n    start: 30,\n    estimate: 240,\n  },\n  {\n    title: 'Ability to quickly add highest and lowest priority todos',\n    start: 40,\n    estimate: 240,\n  },\n];\n\nconst storedTodos = JSON.parse(localStorage.getItem('todos'));\n\nconsole.log('storedTodos', storedTodos);\n\nconst todos = (storedTodos || defaultTodos).map(todo => new Todo(todo));\n\nexport default todos;\n","import moment from 'moment';\n\nexport default class Schedule extends Array {\n  constructor(...todos) {\n    super(...todos);\n    this.update();\n  }\n\n  push(todos) {\n    const result = super.push(todos);\n    this.update();\n    return result;\n  }\n\n  notDone() {\n    return [].concat(this).filter(todo => !todo.done);\n  }\n\n  update() {\n    console.log('Updating schedule', this);\n    this.sort((a, b) => a.start - b.start);\n    const notDone = this.notDone();\n    const lastIndex = notDone.length - 1;\n    if (lastIndex === -1) return this;\n\n    console.log('Rescheduling incomplete todos', notDone);\n\n    const tomorrow = moment().add(1, 'day').startOf('day').toDate();\n\n    console.log('Adjusting first item start', notDone[0]);\n    notDone[0].start = new Date();\n    console.log('Adjusted first item start', notDone[0]);\n\n    for (let i = 0; i <= lastIndex; i++) {\n      const current = notDone[i];\n      if (current.end > tomorrow && current.start < tomorrow) {\n        current.start = tomorrow;\n      }\n      if (i < lastIndex) {\n        notDone[i + 1].start = current.end;\n      }\n    }\n\n    console.log('Updated schedule', this);\n    return this;\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Todo from '../Models/Todo';\n\nclass TodoComponent extends Component {\n  static defaultProps = {\n    todo: null,\n  };\n\n  static propTypes = {\n    todo: PropTypes.instanceOf(Todo),\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { todo: props.todo };\n  }\n\n  inputValueChange = ({ target }) => {\n    const { todo } = this.state;\n    todo[target.name] = target.value;\n    this.setState({ todo });\n  }\n\n  render() {\n    const { todo } = this.state;\n    if (!todo) {\n      return null;\n    }\n    return (\n      <div>\n        <h2>What needs to get done?</h2>\n        <p>\n          Title:&nbsp;\n          <input\n            name=\"title\"\n            type=\"text\"\n            value={todo.title}\n            placeholder=\"This, that, and the other...\"\n            onChange={this.inputValueChange.bind(this)}\n            style={{ width: '80%' }}\n            // eslint-disable-next-line jsx-a11y/no-autofocus\n            autoFocus\n          />\n        </p>\n        <p>\n          Estimate: About&nbsp;\n          <input\n            name=\"estimate\"\n            type=\"text\"\n            value={todo.estimate}\n            onChange={this.inputValueChange}\n            style={{ width: 30, textAlign: 'center' }}\n          />\n          &nbsp;minutes remaining\n        </p>\n        <p>\n          <label htmlFor=\"done\">\n            <input\n              name=\"done\"\n              type=\"checkbox\"\n              checked={todo.done}\n              onChange={this.inputValueChange}\n            />\n            &nbsp;\n            Done\n          </label>\n        </p>\n      </div>);\n  }\n}\n\nexport default TodoComponent;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Todo from '../Models/Todo';\n\nexport default class TodoScheduleItemComponent extends Component {\n  static defaultProps = {\n    todo: null,\n  };\n\n  static propTypes = {\n    todo: PropTypes.instanceOf(Todo),\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { todo: props.todo };\n  }\n\n  inputValueChange = ({ target }) => {\n    const { todo } = this.state;\n    todo[target.name] = target.value;\n    this.setState({ todo });\n  }\n\n  render() {\n    const { todo } = this.props;\n    return (\n      <span>\n        <label htmlFor=\"done\">\n          <input\n            name=\"done\"\n            type=\"checkbox\"\n            checked={todo.done}\n            onChange={this.inputValueChange}\n          />\n          {todo.title}\n        </label>\n      </span>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport BigCalendar from 'react-big-calendar';\nimport moment from 'moment';\nimport withDragAndDrop from 'react-big-calendar/lib/addons/dragAndDrop';\nimport Modal from 'react-modal';\nimport { connect } from 'react-redux';\nimport TodoComponent from './TodoComponent';\nimport Todo from '../Models/Todo';\nimport ScheduleModel from '../Models/Schedule';\nimport TodoScheduleItemComponent from './TodoScheduleItemComponent';\n\n// Setup\nconst localizer = BigCalendar.momentLocalizer(moment); // or globalizeLocalizer\nconst Calendar = withDragAndDrop(BigCalendar);\n\nconst modalStyles = {\n  content: {\n    top: '25%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    zIndex: '1000 !important',\n  },\n};\n\n/* eslint no-param-reassign: [\"error\", { \"props\": false }] */\nclass ScheduleComponent extends Component {\n  static propTypes = {\n    increment: PropTypes.number,\n    schedule: PropTypes.instanceOf(ScheduleModel).isRequired,\n    onScheduleChanged: PropTypes.func,\n  }\n\n  static defaultProps = {\n    increment: 15,\n    onScheduleChanged: () => {},\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { currentTodo: null, schedule: props.schedule };\n  }\n\n  calendarOnEventResize = ({ event, start, end }) => {\n    console.log('Calling calendarOnEventResize: ', event, { start, end });\n    event.estimate = moment.duration(moment(end).diff(moment(start))).asMinutes();\n    event.start = start;\n    this.callOnScheduleChanged();\n  };\n\n  calendarOnEventDrop = ({ event, start }) => {\n    console.log('Calling calendarOnEventDrop: ', event, { start });\n    event.start = start;\n    console.log('Calling OnScheduleChanged event ', event);\n    this.callOnScheduleChanged();\n  };\n\n  callOnScheduleChanged = () => {\n    console.log('Calling callOnScheduleChanged');\n    const { onScheduleChanged } = this.props;\n    onScheduleChanged();\n  }\n\n  calendarOnSelectSlot = ({ start, end }) => {\n    const { currentTodo, schedule } = this.state;\n    if (currentTodo) return;\n    const todo = new Todo({\n      start,\n      estimate: moment.duration(moment(end).diff(moment(start))).asMinutes(),\n    });\n    schedule.push(todo);\n    this.setState({ currentTodo: todo, schedule });\n  };\n\n  calendarOnSelectEvent = (event) => {\n    this.setState({ currentTodo: event });\n  }\n\n  todoOnCloseClick = () => {\n    const { currentTodo, schedule } = this.state;\n    if (!currentTodo.title) {\n      schedule.splice(schedule.indexOf(currentTodo), 1);\n    }\n    this.callOnScheduleChanged();\n    this.setState({ currentTodo: null });\n  }\n\n  render() {\n    const { currentTodo, schedule } = this.state;\n    const { increment } = this.props;\n    console.log('Schedule.jsx render', schedule);\n    // Calendar docs: http://intljusticemission.github.io/react-big-calendar/examples/index.html#api\n    return (\n      <div>\n        <Modal\n          isOpen={!!currentTodo}\n          contentLabel=\"Example Modal\"\n          style={modalStyles}\n        >\n          <TodoComponent todo={currentTodo} />\n          <button type=\"button\" onClick={this.todoOnCloseClick}>Close</button>\n        </Modal>\n        <Calendar\n          defaultDate={new Date()}\n          defaultView=\"day\"\n          events={schedule.filter(todo => !todo.done)}\n          titleAccessor={event => (<TodoScheduleItemComponent todo={event} />)}\n          onEventDrop={this.calendarOnEventDrop}\n          onEventResize={this.calendarOnEventResize}\n          onSelectEvent={this.calendarOnSelectEvent}\n          onSelectSlot={this.calendarOnSelectSlot}\n          localizer={localizer}\n          step={increment}\n          selectable\n          resizable\n          style={{ height: '100vh' }}\n        />\n      </div>);\n  }\n}\n\nexport default ScheduleComponent;\n","import * as Redux from 'redux';\nimport * as ReactRedux from 'react-redux';\n\nfunction reducer(state, action) {\n  return state;\n}\n\nexport default Redux.createStore(reducer);\n","import React, { Component } from 'react';\nimport Modal from 'react-modal';\nimport * as ReactRedux from 'react-redux';\n\nimport './App.css';\nimport 'react-big-calendar/lib/addons/dragAndDrop/styles.css';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport logo from './logo.svg';\nimport todos from './Data/schedule';\nimport Schedule from './Models/Schedule';\nimport ScheduleComponent from './Components/ScheduleComponent';\n\nimport store from './Data/store';\n\nModal.setAppElement('#root'); // Modals!\n\nconst scheduleData = new Schedule(...todos);\n\nclass App extends Component {\n  state = {\n    schedule: scheduleData,\n  };\n\n\n  handleScheduleChange = () => {\n    const { schedule } = this.state;\n    localStorage.setItem('todos', JSON.stringify(schedule.update()));\n    this.setState({ schedule });\n  }\n\n  render() {\n    const { schedule } = this.state;\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" style={{ display: 'none' }} />\n          <h1 className=\"App-title\">Todo Guide!</h1>\n        </header>\n        <ReactRedux.Provider store={store}>\n          <ScheduleComponent\n            schedule={schedule}\n            onScheduleChanged={this.handleScheduleChange}\n          />\n        </ReactRedux.Provider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}